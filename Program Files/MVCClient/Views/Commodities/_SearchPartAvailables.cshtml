@using MVCModel.Models
@using MVCClient.Configuration

@(Html.Kendo().Grid<PartAvailable>()
    .Name("gridPartAvailables")
    .Columns(columns =>
    {
        columns.Bound(c => c.CommodityCode).Title("Mã phụ tùng").Width(25);
        columns.Bound(c => c.CommodityName).Title("Tên phụ tùng").Width(36);
        columns.Bound(c => c.WarehouseCode).Title("Kho").Width(10);
        columns.Bound(p => p.QuantityAvailable).Title("Số lượng").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Width(16).ClientFooterTemplate("TC: #= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
    })
    .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <div class="toolbar" style="float: right;">
                    <label>Nhập mã hoặc tên phụ tùng:</label>
                    <input id="partAvailableSearchBox" class="k-textbox" style="text-align: center; margin-right: 13px;" onkeyup="partAvailableSearchBox_KeyUp()" />
                </div>
            </text>);
        })
        .Scrollable(s => s.Height(SettingsManager.PopupContentHeight + 13))
        .DataSource(ds => ds.Ajax()
        .Read(read => read.Action("SearchPartAvailables", "CommoditiesApi").Data("onGetPartAvailables"))
        .ServerOperation(true)
        .Aggregates(a => a.Add(x => x.QuantityAvailable).Sum()))
        .Selectable()
)



<script type="text/javascript">
    function onGetPartAvailables(e) {
        return {
            locationID: 0,
            searchText: $("#partAvailableSearchBox").val(),
            wholeMatch: false
        };
    }

    function partAvailableSearchBox_KeyUp() {
        if ($("#partAvailableSearchBox").val().length >= "@SettingsManager.AutoCompleteMinLenght") {
            $("#gridPartAvailables").data("kendoGrid").dataSource.read();
        }
    }
</script>